@model ENETCareMVCApp.Models.Intervention

@{
    ViewBag.Title = "Edit Quality Management Information";
}

<h2>Edit Quality Management Information</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Intervention</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.InterventionID)
        @Html.HiddenFor(model => model.InterventionState)

        <div class="form-group">
            @Html.LabelFor(model => model.LabourRequired, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.LabourRequired)
                @Model.LabourRequired
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CostRequired, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.CostRequired)
                @Model.CostRequired
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InterventionDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.InterventionDate)
                @Model.InterventionDate
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control", cols = 1000, @rows = 1000 } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (ViewBag.Disabled == false)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.RemainingLife, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RemainingLife, new { htmlAttributes = new { @class = "form-control", id = "remainingLifetextbox" } })
                    @Html.ValidationMessageFor(model => model.RemainingLife, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.RemainingLife)
        }

        <div class="form-group">
            @Html.LabelFor(model => model.LastEditDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.LastEditDate)
                @Model.LastEditDate
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.Client.ClientName
                @Html.HiddenFor(model => model.ClientID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.User.UserName
                @Html.HiddenFor(model => model.UserID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApproveUserID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.ApprovalUser.UserName
                @Html.HiddenFor(model => model.ApproveUserID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InterventionTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.InterventionTypeID)
                @Model.InterventionType.InterventionTypeName
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ClientListWithIntervention","Clients")
</div>
